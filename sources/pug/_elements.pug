-
	function getImageSize(name) {
		try { return name.match('[0-9]+(x)[0-9]+')[0].split('x'); }
		catch ( error ) {
			throw new Error('Error in function getImageSize:\n' + error);
		}
	}

	//- Get menu branch by category name
	function getMenuCategory(category) {
		for (var i = 0; i < menu.length; i++) {
			if (menu[i].category === category) {
				return menu[i];
			}
		}
		return undefined;
	}

	//- Any page title to *.html link
	function nameToLink(name) {
		try { return name.trim().replace(/\s/g, '-').replace(/[\(\)]/g, '').toLowerCase() + '.html'; }
		catch ( error ) {
			throw new Error('Error in function nameToLink:\n' + error);
		}
	}


//- Img image
mixin img(name, className)
	- var size = getImageSize(name);
	- var ext = name.split('.')[1];

	img(src='images/' + name, alt='', width=size[0], height=size[1], class=className)


//- Jpg image
mixin jpg(name, className)
	- var size = getImageSize(name);
	img(src='images/' + name + '.jpg', alt='', width=size[0], height=size[1], class=className)


//- Png image
mixin png(name, className)
	- var size = getImageSize(name);
	img(src='images/' + name + '.png', alt='', width=size[0], height=size[1], class=className)


//- Loop without indexing mixin
mixin loop(count)
	- for (var i = 0; i < count; i++)
		block


//- Parallax Section
mixin parallax(obj)
	.parallax-container(data-parallax-img='images/' + obj.img + '.jpg')
		.parallax-content(class=obj.innerClass)
			block


//- Breadcrumbs 
mixin breadcrumbs(obj)
	- var activeItemName= obj.path.pop();
	- var category = getMenuCategory(obj.category);

	// Breadcrumbs 
	section.breadcrumbs-custom.bg-image.context-dark(style=obj.bgImage ? 'background-image: url(images/' + obj.bgImage + '.jpg);' : '')
		.container
			h2.breadcrumbs-custom-title=activeItemName
			ul.breadcrumbs-custom-path
				li: a(href='index.html') Home
				if (typeof(category) !== 'undefined' && (category.title !== activeItemName))
					li: a(href=category.link ? category.link : nameToLink(category.title))=category.title
					-for( var i = 0; i < obj.path.length; i++)
						li: a(href=obj.path[i].link ? obj.path[i].link : nameToLink(obj.path[i].title))=obj.path[i].title

				li.active=activeItemName


//- Logo
mixin logo(modClass)
	a.brand(href='index.html' class=modClass ? modClass : '')
		+png(logo.default, 'brand-logo-dark')
		+png(logo.inverse, 'brand-logo-light')


//- Copyright
mixin rights(modClass)
	// Rights
	p.rights(class=modClass ? modClass : '')
		span &copy;&nbsp; 
		span.copyright-year
		span &nbsp;
		span= logo.name
		span .&nbsp;
		a(href='privacy-policy.html') Privacy Policy
